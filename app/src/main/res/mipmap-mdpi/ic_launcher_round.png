package com.example.jiolauncher.Fragments;

import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.os.AsyncTask;
import android.os.Bundle;

import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.inputmethod.EditorInfo;
import android.widget.ProgressBar;
import android.widget.SearchView;
import android.widget.TextView;

import com.example.jiolauncher.Adapter.AppListAdapter;
import com.example.jiolauncher.InterfaceMethods;
import com.example.jiolauncher.Models.AppInfo;
import com.example.jiolauncher.R;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

/**
 * A simple {@link Fragment} subclass.
 * Use the {@linkAppListFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class AppListFragment extends Fragment {

    View rootView;
    RecyclerView recyclerView;
    RecyclerView.Adapter adapter;
    RecyclerView.LayoutManager layoutManager;
    private static List<AppInfo> appsList;
    private ProgressBar mProgressBar;
    TextView mEtSearch;
    public AppListFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        rootView = inflater.inflate(R.layout.fragment_app_list, container, false);
        recyclerView = rootView.findViewById(R.id.rvAppList);
        mProgressBar=rootView.findViewById(R.id.progressBar);
        mEtSearch=rootView.findViewById(R.id.etSearch);
        appsList = new ArrayList<>();

        adapter = new AppListAdapter(getContext(), appsList, new InterfaceMethods.AppListClickListener() {
            @Override
            public void onClickCallback(String thePackageName) {

                Intent launchIntent = getActivity().getPackageManager().getLaunchIntentForPackage(thePackageName);
                startActivity(launchIntent);

            }
        });
        //adding a TextChangedListener
        //to call a method whenever there is some change on the EditText
        mEtSearch.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void afterTextChanged(Editable editable) {
                //after the change calling the method and passing the search input
                filter(editable.toString());
            }
        });

        layoutM